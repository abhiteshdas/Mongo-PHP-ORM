#!/bin/env spartan-test
<?

M::reset();
#=null
// TypedCollection magic fields query support

; $T = M::Typed();  // typed collection
; $T->reset();      // drop all data, reset sequence
$T->type["ph"];     // field "ph" have type "phone"
#="phone"

// prepare data
; $T->insert(["ph" => "(617) 372-0000"]);
; $T->insert(["ph" => "7 495 726-0000"]);
; $T->insert(["ph" => "+49 221 828 1234"]);

// query all phone fields
$T->f(['ph' => ['$exists' => true]], "ph");
#={"1":{"_id":1,"ph":16173720000},"2":{"_id":2,"ph":74957260000},"3":{"_id":3,"ph":492218281234}}
// Find as Objects - Object List
; $ol = $T->fo(['ph' => ['$exists' => true]], "ph");

// magic field get = human-readable representation of field
$ol[1]->_ph;
#="(617)372-0000"
$ol[2]->_ph;
#="+7 495-726-0000"
$ol[3]->_ph;
#="+49 221-828-1234"

// Magic
$T->fm([], "_ph");
#={"1":{"_id":1,"ph":16173720000,"_ph":"(617)372-0000"},"2":{"_id":2,"ph":74957260000,"_ph":"+7 495-726-0000"},"3":{"_id":3,"ph":492218281234,"_ph":"+49 221-828-1234"}}

// fm will throw exceptions
// 1. field list must be sting
$T->fm([], []);
#=["InvalidArgumentException","field list must be string",0]

// 2. you should query something magic
$T->fm([], "ph");
#=["InvalidArgumentException","no aliases or magic fields in query",0]

// type expansion in finder
$T->f(['ph' => "7495726-0000"]);
#={"2":{"_id":2,"ph":74957260000}}

// receive magic field in result
$T->fm(['ph' => "7495726-0000"], "_ph");
#={"2":{"_id":2,"ph":74957260000,"_ph":"+7 495-726-0000"}}

// alias expansion in finder
$T->type["phone"];
#=["alias","ph"]

// internal alias expansion logic (+type resolving)
$T->_query(["phone" => "7495726-0000"]);
#={"ph":74957260000}

// find BY alias
$T->f(['phone' => "7495726-0000"]);
#={"2":{"_id":2,"ph":74957260000}}


// FIND - aliases, magic fields in result field lists
// logic: you always get what are you looking for
//        you will get original fields also
// for alias - you'll also get referred field
// for magic field - you'll get non-magic field

// alias in result list
$T->fm(['phone' => "7495726-0000"], "phone");
#={"2":{"_id":2,"ph":74957260000,"phone":74957260000}}

// magic field in result list
$T->fm(['phone' => "7495726-0000"], "_ph");
#={"2":{"_id":2,"ph":74957260000,"_ph":"+7 495-726-0000"}}

// magic of alias in result list
$T->fm(['phone' => "7495726-0000"], "_phone");
#={"2":{"_id":2,"ph":74957260000,"_ph":"+7 495-726-0000","_phone":"+7 495-726-0000"}}

// magic field and alias in result list
// combo of above, because of alias thereis no original "ph" field
$T->fm(['phone' => "7495726-0000"], "phone _ph");
#={"2":{"_id":2,"ph":74957260000,"_ph":"+7 495-726-0000","phone":74957260000}}
#
// magic of alias + alias
$T->fm(['phone' => "7495726-0000"], "phone _phone");
#={"2":{"_id":2,"ph":74957260000,"_ph":"+7 495-726-0000","phone":74957260000,"_phone":"+7 495-726-0000"}}
